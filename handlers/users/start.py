import pymongo
from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.builtin import CommandStart

from keyboards.default import menu, smart, eisenhower_keyboard
from loader import dp, db
from states import StartSettings


@dp.message_handler(CommandStart())
async def bot_start(message: types.Message):
    await message.answer(f"üññ–ü—Ä–∏–≤–µ—Ç, {message.from_user.full_name}!\n"
                         f"üë®‚Äçüíª–Ø —Ç–≤–æ–π –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–µ!\n"
                         "–í –º–æ–∏ –∑–∞–¥–∞—á–∏ –≤—Ö–æ–¥–∏—Ç:\n"
                         "  1. –£—á–µ—Ç —Ç–≤–æ–∏—Ö —Ñ–∏–Ω–∞–Ω—Å–æ–≤üí∏\n"
                         "  2. –í–µ–¥–µ–Ω–∏–µ —Ç–≤–æ–∏—Ö –∑–∞–¥–∞—á‚úÖ\n"
                         "  3. –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤üíæ\n")
    await message.answer("–î–∞–≤–∞–π –º–µ–Ω—è –Ω–∞—Å—Ç—Ä–æ–∏–º‚öô")
    await message.answer("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–æ–¥—Å–∫–∞–∑–∫–∏ SMART?\n"
                         "–ü–æ–¥—Ä–æ–±–Ω–µ–µ: https://ru.wikipedia.org/wiki/SMART", reply_markup=smart)
    await StartSettings.q1.set()

@dp.message_handler(state=StartSettings.q1)
async def eisenhower(message: types.Message, state=FSMContext):
    smart_answer = message.text
    status = True
    while status:
        if smart_answer == "üü¢–î–∞":
            smart_answer=1
            status = False
        elif smart_answer == "üî¥–ù–µ—Ç":
            smart_answer=0
            status = False
        else:
            await message.answer("–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫ –≤—ã–±–æ—Ä–∞")
            return

    await state.update_data(answer1=smart_answer)
    await message.answer("–í–∫–ª—é—á–∏—Ç—å —Ç–µ–≥–∏ –º–∞—Ç—Ä–∏—Ü—ã –≠–π–∑–µ–Ω—Ö–∞—É—ç—Ä–∞?", reply_markup=eisenhower_keyboard)
    await StartSettings.q2.set()

@dp.message_handler(state=StartSettings.q2)
async def eisenhower_answer(message: types.Message, state=FSMContext):
    data =await state.get_data()
    smart = data.get("answer1")
    eisenhower = message.text
    status = True
    while status:
        if eisenhower == "üü¢–î–∞":
            eisenhower=1
            status = False
        elif eisenhower == "üî¥–ù–µ—Ç":
            eisenhower = 0
            status = False
        else:
            await message.answer("–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫ –≤—ã–±–æ—Ä–∞")
            return

    post = {
        "_id": message.from_user.id,
        "name": message.from_user.full_name,
        "smart": smart,
        "eisenhower": eisenhower
    }

    try:
        db.add_user(post)
        await message.answer("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –£—Å–ø–µ—à–Ω–∞", reply_markup=menu)
    except pymongo.errors.DuplicateKeyError:
        await message.answer("–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã", reply_markup=menu)
    await state.finish()

